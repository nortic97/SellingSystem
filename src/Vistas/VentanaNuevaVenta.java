/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Modelo.Cliente;
import Modelo.ClienteDAO;
import Modelo.Config;
import Modelo.ConfigDAO;
import Modelo.Detalle;
import Modelo.Evento;
import Modelo.Producto;
import Modelo.ProductoDAO;
import Modelo.Venta;
import Modelo.VentaDAO;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Paula
 */
public class VentanaNuevaVenta extends javax.swing.JInternalFrame {

    ProductoDAO pdao = new ProductoDAO();
    Producto prod = new Producto();
    DefaultTableModel modelo = new DefaultTableModel();
    double Totalpagar = 0.00;
    int item;
    Venta v = new Venta();
    VentaDAO vdao = new VentaDAO();
    Detalle det = new Detalle();
    Evento Validar = new Evento();
    Config c = new Config();
    ConfigDAO cdao = new ConfigDAO();
    String logo;
    File Config = null;
    String RutaImg = "./conf/ConfigFac.conf";

    public VentanaNuevaVenta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_stock = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_cod = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_cantidad = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_descripcion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_nueva_venta = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lbl_total = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txt_cc = new javax.swing.JTextField();
        lbl_nombre_cliente = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Modulo Ventas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/sell24px.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt_stock.setEditable(false);
        txt_stock.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txt_precio.setEditable(false);
        txt_precio.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("STOCK");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("CANTIDAD");

        txt_cod.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_cod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codKeyPressed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("COD");

        txt_cantidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_cantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cantidadActionPerformed(evt);
            }
        });
        txt_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cantidadKeyTyped(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("PRECIO");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("DESCRIPCION");

        txt_descripcion.setEditable(false);
        txt_descripcion.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_stock, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/sell128px.png"))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_nueva_venta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COD", "DESCRIPCION", "CANTIDAD", "PRECIO U.", "PRECIO TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_nueva_venta);
        if (tbl_nueva_venta.getColumnModel().getColumnCount() > 0) {
            tbl_nueva_venta.getColumnModel().getColumn(0).setResizable(false);
            tbl_nueva_venta.getColumnModel().getColumn(1).setResizable(false);
            tbl_nueva_venta.getColumnModel().getColumn(2).setResizable(false);
            tbl_nueva_venta.getColumnModel().getColumn(3).setResizable(false);
            tbl_nueva_venta.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/print48px.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cash48px.png"))); // NOI18N
        jLabel7.setText("TOTAL:");

        lbl_total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_total.setText("-------");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/delete48px.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("CC:");

        txt_cc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_cc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ccKeyPressed(evt);
            }
        });

        lbl_nombre_cliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_cc, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_nombre_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(236, 236, 236)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_total, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_nombre_cliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txt_cc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(29, 29, 29)))))
                .addGap(6, 6, 6)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_codKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (!"".equals(txt_cod.getText())) {

                String cod = txt_cod.getText();
                prod = pdao.BuscarProductos(cod);

                if (prod.getNombre() != null) {

                    txt_descripcion.setText(prod.getNombre());
                    txt_precio.setText("" + prod.getPrecio());
                    txt_stock.setText("" + prod.getStock());
                    txt_cantidad.requestFocus();

                } else {

                    limpiar();
                    txt_cod.requestFocus();
                }

            } else {

                JOptionPane.showMessageDialog(this, "El codigo esta vacio", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);

            }

        }

    }//GEN-LAST:event_txt_codKeyPressed

    private void txt_cantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantidadKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (!"".equals(txt_cantidad.getText())) {

                String code = txt_cod.getText();
                String descrip = txt_descripcion.getText();

                int cant = Integer.parseInt(txt_cantidad.getText());

                double precio = Double.parseDouble(txt_precio.getText());

                double total = cant * precio;

                int stock = Integer.parseInt(txt_stock.getText());

                if (stock >= cant) {

                    item = item + 1;

                    for (int i = 0; i < tbl_nueva_venta.getRowCount(); i++) {

                        if (tbl_nueva_venta.getValueAt(i, 1).equals(txt_descripcion.getText())) {

                            JOptionPane.showMessageDialog(this, "El producto ya esta registrado", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
                            limpiar();
                            txt_cod.requestFocus();
                            return;
                        }

                    }

                    modelo = (DefaultTableModel) tbl_nueva_venta.getModel();

                    ArrayList lista = new ArrayList();

                    lista.add(item);
                    lista.add(code);
                    lista.add(descrip);
                    lista.add(cant);
                    lista.add(precio);
                    lista.add(total);

                    Object[] o = new Object[5];

                    o[0] = lista.get(1);
                    o[1] = lista.get(2);
                    o[2] = lista.get(3);
                    o[3] = lista.get(4);
                    o[4] = lista.get(5);
                    modelo.addRow(o);

                    tbl_nueva_venta.setModel(modelo);

                    TotalPagar();
                    limpiar();

                    txt_cod.requestFocus();

                } else {

                    JOptionPane.showMessageDialog(this, "Cantidad no disponible", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);

                }

            } else {

                JOptionPane.showMessageDialog(this, "Ingrese una cantidad", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);

            }

        }

    }//GEN-LAST:event_txt_cantidadKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        modelo = (DefaultTableModel) tbl_nueva_venta.getModel();
        modelo.removeRow(tbl_nueva_venta.getSelectedRow());
        TotalPagar();
        txt_cod.requestFocus();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (tbl_nueva_venta.getRowCount() > 0) {

            ClienteDAO cdao = new ClienteDAO();
            Cliente c = new Cliente();
            String cedula = txt_cc.getText();
            c = cdao.BuscarCliente(cedula);
            if (c.getNombre() != null) {

                String n = c.getNombre();
                String p = c.getPaterno();
                String m = c.getMaterno();

                lbl_nombre_cliente.setText(n + " " + p + " " + m);

            }

            RegistrarVenta();

        } else {
            JOptionPane.showMessageDialog(this, "NO HAY PRODUCTOS EN LA VENTA", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_ccKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ccKeyPressed

        ClienteDAO cdao = new ClienteDAO();
        Cliente c = new Cliente();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            String cedula = txt_cc.getText();
            c = cdao.BuscarCliente(cedula);

            if (c.getNombre() != null) {

                String n = c.getNombre();
                String p = c.getPaterno();
                String m = c.getMaterno();

                lbl_nombre_cliente.setText(n + " " + p + " " + m);

            } else {

                lbl_nombre_cliente.setText("");
            }
        }
    }//GEN-LAST:event_txt_ccKeyPressed

    private void txt_cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantidadKeyTyped
        Validar.numberKeyPress(evt);
    }//GEN-LAST:event_txt_cantidadKeyTyped

    private void txt_cantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cantidadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_nombre_cliente;
    private javax.swing.JLabel lbl_total;
    private javax.swing.JTable tbl_nueva_venta;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_cc;
    private javax.swing.JTextField txt_cod;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txt_stock;
    // End of variables declaration//GEN-END:variables

    private void TotalPagar() {

        Totalpagar = 0.00;

        int numfila = tbl_nueva_venta.getRowCount();

        for (int i = 0; i < numfila; i++) {

            double cal = Double.parseDouble(String.valueOf(tbl_nueva_venta.getModel().getValueAt(i, 4)));

            Totalpagar = Totalpagar + cal;

            lbl_total.setText(String.format("%.2f", Totalpagar));

        }

    }

    private void limpiar() {

        txt_cantidad.setText("");
        txt_cod.setText("");
        txt_descripcion.setText("");
        txt_precio.setText("");
        txt_stock.setText("");

    }

    private void RegistrarVenta() {

        String cliente = lbl_nombre_cliente.getText();
        String vendedor = VentanaPrincipal.lbl_vendedor.getText();
        String cedula = txt_cc.getText();
        double monto = Totalpagar;
        String cod = "";
        String des = "";
        String cant = "";
        String pu = "";
        String pt = "";
        String tot = lbl_total.getText();

        for (int i = 0; i < tbl_nueva_venta.getRowCount(); i++) {

            cod = tbl_nueva_venta.getValueAt(i, 0).toString();
            des = tbl_nueva_venta.getValueAt(i, 1).toString();
            cant = tbl_nueva_venta.getValueAt(i, 2).toString();
            pu = tbl_nueva_venta.getValueAt(i, 3).toString();
            pt = tbl_nueva_venta.getValueAt(i, 4).toString();

        }

        if (!"".equals(lbl_nombre_cliente.getText())) {

            v.setCliente(cliente);
            v.setVendedor(vendedor);
            v.setTotal(monto);
            vdao.RegistrarVenta(v);
            GenerarPdf();
            RegistrarDetalle();
            ActualizarStock();
            LimpiarTabla();
            txt_cc.setText("");
            lbl_nombre_cliente.setText("");

        } else {
            if ("".equals(txt_cc.getText())) {

                JOptionPane.showMessageDialog(this, "Digite un documento", "CC VACIA", JOptionPane.INFORMATION_MESSAGE);

            } else {

                String cliente_cc = txt_cc.getText();
                v.setCliente(cliente_cc);
                v.setVendedor(vendedor);
                v.setTotal(monto);
                vdao.RegistrarVenta(v);
                GenerarPdf();
                RegistrarDetalle();
                ActualizarStock();
                LimpiarTabla();
                txt_cc.setText("");
                lbl_nombre_cliente.setText("");
            }
        }
    }

    private void RegistrarDetalle() {

        int id = vdao.id_venta();

        for (int i = 0; i < tbl_nueva_venta.getRowCount(); i++) {

            String cod = tbl_nueva_venta.getValueAt(i, 0).toString();
            int cantidad = Integer.parseInt(tbl_nueva_venta.getValueAt(i, 2).toString());
            double precio = Double.parseDouble(tbl_nueva_venta.getValueAt(i, 3).toString());

            det.setCod_producto(cod);
            det.setCantidad(cantidad);
            det.setPrecio(precio);
            det.setId_venta(id);

            vdao.RegistrarDetalle(det);
        }
    }

    private void ActualizarStock() {

        for (int i = 0; i < tbl_nueva_venta.getRowCount(); i++) {

            String cod = tbl_nueva_venta.getValueAt(i, 0).toString();
            int cant = Integer.parseInt(tbl_nueva_venta.getValueAt(i, 2).toString());
            prod = pdao.BuscarProductos(cod);
            int StockActual = prod.getStock() - cant;
            vdao.ActualizarStock(StockActual, cod);
        }
    }

    public void LimpiarTabla() {

        modelo.setRowCount(0);

    }

    public void GenerarPdf() {

        Date calendario = new Date();
        SimpleDateFormat formato_calendario = new SimpleDateFormat("dd/MM/yyyy " + "hh:mm a");

        int id = vdao.id_venta();
        c = cdao.datos();
        String rutbd = c.getRut();
        String nombrebd = c.getNombre();
        String telefonobd = c.getTelefono();
        String direccionbd = c.getDireccion();
        String razonbd = c.getRazon();

        FileReader LeerCfg = null;
        BufferedReader bf = null;

        try {

            Config = new File(RutaImg);
            LeerCfg = new FileReader(Config);
            bf = new BufferedReader(LeerCfg);
            logo = bf.readLine();

        } catch (IOException e) {
        } finally {
            try {
                if (null != LeerCfg) {
                    LeerCfg.close();
                }
            } catch (IOException e) {
            }
        }

        try {

            FileOutputStream archivo;
            File pdf = new File("./Reportes/" + (id) + ".pdf");
            Document doc = new Document();
            archivo = new FileOutputStream(pdf);

            PdfWriter.getInstance(doc, archivo);

            doc.open();
            //parametros y propiedades de texto
            Image img = Image.getInstance(logo);
            Paragraph fecha = new Paragraph();
            Font negrita = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLUE);
            fecha.add(Chunk.NEWLINE);
            fecha.add("Fecha: " + formato_calendario.format(calendario) + "\n\n");
            PdfPTable Encabezado = new PdfPTable(4);
            Encabezado.setWidthPercentage(100);
            Encabezado.getDefaultCell().setBorder(0);
            float[] ColumnaEncabezado = new float[]{20f, 30f, 70f, 40f};
            Encabezado.setWidths(ColumnaEncabezado);
            Encabezado.setHorizontalAlignment(Element.ALIGN_LEFT);
            Encabezado.addCell(img);

            String cc = rutbd;
            String nombre = nombrebd;
            String tel = telefonobd;
            String dir = direccionbd;
            String razon = razonbd;

            Encabezado.addCell("");
            Encabezado.addCell("Rut: " + cc + "\n" + nombre + "\n" + "Tel: " + tel + "\n" + "Direccion: " + dir + "\n" + razon);
            Encabezado.addCell("Factura: " + id + "\n" + formato_calendario.format(calendario));
            doc.add(Encabezado);

            Paragraph cliente = new Paragraph();
            cliente.add(Chunk.NEWLINE);
            cliente.add("Datos del cliente" + "\n\n");
            doc.add(cliente);

            PdfPTable Tabla_clientes = new PdfPTable(2);
            Tabla_clientes.setWidthPercentage(100);
            Tabla_clientes.getDefaultCell().setBorder(0);
            float[] ColumnaClientes = new float[]{20f, 50f};
            Tabla_clientes.setWidths(ColumnaClientes);
            Tabla_clientes.setHorizontalAlignment(Element.ALIGN_LEFT);

            PdfPCell cliente1 = new PdfPCell(new Phrase("CC", negrita));
            PdfPCell cliente2 = new PdfPCell(new Phrase("NOMBRE", negrita));

            cliente1.setBorder(0);
            cliente2.setBorder(0);

            Tabla_clientes.addCell(cliente1);
            Tabla_clientes.addCell(cliente2);

            if ("".equals(lbl_nombre_cliente.getText())) {
                Tabla_clientes.addCell(txt_cc.getText());
                Tabla_clientes.addCell("Cliente sin registro");
            } else {
                Tabla_clientes.addCell(txt_cc.getText());
                Tabla_clientes.addCell(lbl_nombre_cliente.getText());
            }

            doc.add(Tabla_clientes);

            //productos
            PdfPTable Tabla_Producto = new PdfPTable(5);
            Tabla_Producto.setWidthPercentage(100);
            Tabla_Producto.getDefaultCell().setBorder(0);
            float[] ColumnaProducto = new float[]{50f, 50f, 20f, 40f, 40f};
            Tabla_Producto.setWidths(ColumnaProducto);
            Tabla_Producto.setHorizontalAlignment(Element.ALIGN_LEFT);

            PdfPCell producto1 = new PdfPCell(new Phrase("COD.", negrita));
            PdfPCell producto2 = new PdfPCell(new Phrase("DESCRIPCION", negrita));
            PdfPCell producto3 = new PdfPCell(new Phrase("CANT.", negrita));
            PdfPCell producto4 = new PdfPCell(new Phrase("PRECIO U.", negrita));
            PdfPCell producto5 = new PdfPCell(new Phrase("PRECIO T.", negrita));

            producto1.setBorder(0);
            producto2.setBorder(0);
            producto3.setBorder(0);
            producto4.setBorder(0);
            producto5.setBorder(0);

            producto1.setBackgroundColor(BaseColor.ORANGE);
            producto2.setBackgroundColor(BaseColor.ORANGE);
            producto3.setBackgroundColor(BaseColor.ORANGE);
            producto4.setBackgroundColor(BaseColor.ORANGE);
            producto5.setBackgroundColor(BaseColor.ORANGE);

            Tabla_Producto.addCell(producto1);
            Tabla_Producto.addCell(producto2);
            Tabla_Producto.addCell(producto3);
            Tabla_Producto.addCell(producto4);
            Tabla_Producto.addCell(producto5);

            for (int i = 0; i < tbl_nueva_venta.getRowCount(); i++) {

                String cod = tbl_nueva_venta.getValueAt(i, 0).toString();
                String des = tbl_nueva_venta.getValueAt(i, 1).toString();
                String cant = tbl_nueva_venta.getValueAt(i, 2).toString();
                String pu = tbl_nueva_venta.getValueAt(i, 3).toString();
                String pt = tbl_nueva_venta.getValueAt(i, 4).toString();

                Tabla_Producto.addCell(cod);
                Tabla_Producto.addCell(des);
                Tabla_Producto.addCell(cant);
                Tabla_Producto.addCell(pu);
                Tabla_Producto.addCell(pt);

            }

            doc.add(Tabla_Producto);

            Paragraph info = new Paragraph();
            info.add(Chunk.NEWLINE);
            info.add("\n\nTOTAL A PAGAR: " + lbl_total.getText());
            info.setAlignment(Element.ALIGN_RIGHT);
            doc.add(info);

            Paragraph firma = new Paragraph();
            firma.add(Chunk.NEWLINE);
            firma.add("_____________________\n");
            firma.add("FIRMA");
            firma.setAlignment(Element.ALIGN_CENTER);
            doc.add(firma);

            Paragraph mensaje = new Paragraph();
            mensaje.add(Chunk.NEWLINE);
            mensaje.add("GRACIAS POR SU COMPRA");
            mensaje.setAlignment(Element.ALIGN_CENTER);
            doc.add(mensaje);

            doc.close();
            archivo.close();
            Desktop.getDesktop().open(pdf);

        } catch (Exception e) {
        }

    }

}
